#!/bin/sh
DAEMON=/usr/sbin/dnsmasq
NAME=dnsmasq
DESC="DNS forwarder and DHCP server"
PIDFILE="/var/run/dnsmasq.pid"
DNSMASQ_TIMEOUT=10
CTRL1_FQDN_FLAG="/etc/platform/.upgrade_do_not_use_fqdn"

test -f $DAEMON || exit 0

case "$1" in
    start)
        echo -n "starting $DESC: $NAME... "
	test -d /var/lib/misc/ || mkdir /var/lib/misc/
	start-stop-daemon -S -x $DAEMON --pidfile $PIDFILE -- $ARGS
	echo "done."
	# DNS is just ready when it can resolve controller.internal
	# but ignore this test during controller-1 upgrade since
	# the dnsmasq.addn_hosts was created by previous code without
	# the controller.internal entry
	# TODO<fcorream> remove the flag CTRL1_FQDN_FLAG for future
	# releases
	if [ ! -f "${CTRL1_FQDN_FLAG}" ]; then
		let -i UNTIL=$SECONDS+$DNSMASQ_TIMEOUT
		domain="controller.internal"
		ipv4_result=""
		ipv6_result=""
		while [ $UNTIL -ge $SECONDS ]
		do
			ipv4_result=$(dig +short ${domain})
			ipv6_result=$(dig AAAA +short ${domain})
			# Check to see if DNS is ready
			if [ -n "${ipv4_result}" ] || [ -n "${ipv6_result}" ];
			then
				echo "$NAME is operational."
				break
			fi
			# Check every second
			sleep 1
		done
		if [ -z "${ipv4_result}" ] && [ -z "${ipv6_result}" ];
		then
			echo "$NAME did not provide name resolution in $DNSMASQ_TIMEOUT seconds after starting. Continuing...."
		fi
	fi
	echo -n "Refresh hosts cache"
	nscd -i hosts
	echo "done."
	;;
    stop)
        echo -n "stopping $DESC: $NAME... "
	start-stop-daemon -K -x $DAEMON --pidfile $PIDFILE
	rm -f $PIDFILE
	echo "done."
	;;
    status)
	echo -n "dnsmasq "
	start-stop-daemon -q -K -t -x $DAEMON --pidfile $PIDFILE
	RET=$?
	if [ "$RET" = "0" ]; then
		PID=`cat $PIDFILE`
		echo "($PID) is running"
	else
		echo "is not running"
                # For lsb compliance return 3 if process not running
		exit 3
	fi
	;;
    restart)
        echo "restarting $DESC: $NAME... "
 	$0 stop
	$0 start
	echo "done."
	;;
    reload)
    	echo -n "reloading $DESC: $NAME... "
    	killall -HUP $(basename ${DAEMON})
	echo "done."
	;;
    *)
	echo "Usage: $0 {start|stop|status|restart|reload}"
	exit 1
	;;
esac

exit 0
